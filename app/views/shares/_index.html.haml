.share_index
  %table{border: 1}
    %thead
      %tr
        =col_header 'Name', 'name_sorter', calc_sorter_gif('NAME')
        =col_header 'Symbol'
        =col_header 'Israeli Number'
        =col_header 'Currency', 'currency_filter', 'funnel.gif'
        =col_header 'Current Price'
        =col_header '#shares'
        =col_header 'Current Dividend Yield'
        =col_header 'Weighted Dividend Yield'
        =col_header 'Value'
        =col_header 'Value in NIS'
        =col_header 'P/L in NIS', 'nis_sorter', calc_sorter_gif('P_L')
        =col_header 'P/L %', 'p_l_pcnt_sorter', calc_sorter_gif('P_L_PCNT')
        =col_header 'Actions'
        =col_header 'Badges', 'badges_filter', 'funnel.gif'
    %tbody
      -@toggle = true
      -@total_total = 0
      -@rows_reported = 0
      -@total_ytd = 0
      -@total_weighed = 0
      -@total_pl = 0
      - account = nil if !defined?(account)
      - rc = Rates::RatesCache.instance
      -@shares = reorder_shares(@shares)
      -@shares.each do |share|
        -total_holdings = share.total_holdings(by_account, account)
        -current_price = share.current_price
        -total_value = current_price ? total_holdings * current_price : nil
        -nis_val = rc.convert_to_nis(share.currency, total_value)
        -p_l, p_l_missing_count, p_l_pcnt = share.p_l
        -p_l_nis = rc.convert_to_nis(share.currency, p_l)
        -@total_pl = @total_pl + p_l_nis
        -p_l_color = p_l < 0 ? 'p_l_red' : 'p_l_green'
        -@total_total = @total_total + nis_val
        -@rows_reported = @rows_reported + 1
        -weighed_ytd = share.div_ytd[:weighted_ytd]
        -ytd = share.div_ytd[:ytd_pcnt]
        -@total_ytd = @total_ytd + ytd
        -@total_weighed = @total_weighed + weighed_ytd
        -@toggle = !@toggle
        -@rowclass = (@toggle ? 'rowcol_1' : 'rowcol_2') + ' indexrow'
        %tr{class: @rowclass, onclick: "getDetails(this, #{share.id})"}
          %td
            = render :partial => 'shared/field', :locals => { obj: share, data: share.name, field_name: 'name' }
          %td
            = render :partial => 'shared/field', :locals => { obj: share, data: share.symbol, field_name: 'symbol' }
          %td.number
            = render :partial => 'shared/field', :locals => { obj: share, data: share.israeli_number, field_name: 'israeli_number' }
          %td
            = render :partial => 'shared/field', :locals => { obj: share, data: share.currency, field_name: 'currency' }
          %td.number
            #{format_number(current_price, 2)}
          %td.number
            #{format_number(total_holdings)}
          %td.number
            #{format_number(ytd, 2)}
          %td.number
            #{format_number(weighed_ytd, 2)}
          %td.number
            #{format_number(total_value,2)}
          %td.number
            #{format_number(nis_val, 2)}
          %td.number
            %span{class: p_l_color}
              #{format_number(p_l_nis, 2)}
          %td.number
            %span{class: p_l_color}
              #{format_number(p_l_pcnt, 2)}
          %td.action_col
            = image_tag 'trash_can.png', size: 16, onclick: "deleteShare(#{share.id})"
          %td{tag: 'column_badges', data_badges: share.badges}
            - share.badges.each do |badge|
              %sp.badge
                = create_pill(badge.to_s, share)